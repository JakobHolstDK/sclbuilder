---
- name: Initial database seed
  hosts: prod_sclbuilder_worker
  vars_files:
    - vars.yml 
  tasks:
  - name: Install rhel
    ansible.builtin.package:
      name: 
        - glusterfs-fuse
        - redis
        - python38-psycopg2
        - python38-pip
        - python38-devel
        - python3-devel
        - python3-requests
        - python38-requests
        - wget
        - rpm-build
        - scl-utils-build
        - scl-utils
        - help2man
        - unzip
        - openssl-devel
        - libtool-ltdl-devel
        - sphinx
        #- python3-sphinx
        - make
        - gcc
        - libffi-devel
        - openldap-devel
        - libxml2-devel
        - xmlsec1
        - xmlsec1-openssl
        #- xmlsec1-devel 
        #- xmlsec1-openssl-devel
        - libpq-devel
        - platform-python-devel
      state: present

  - name: Install bottle python package
    pip:
      name: 
        - requests
        - requirements-parser
        - spec2scl
        - setuptools_rust
        - wheel


  - name: Update pip
    pip:
      name: pip

  - name: Install psyorg in the platforn python
    command: /usr/libexec/platform-python -m pip install psycopg2-binary 

  - name: Install setuptools_rust in the platforn python
    command: /usr/libexec/platform-python -m pip install setuptools_rust

  
  - name: Simple select query to acme db
    community.postgresql.postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: SELECT version()
    delegate_to: localhost

  - name: Select the all packages where packagesourcefileurl is NULL
    community.postgresql.postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select id,packagename,packageversion,packagestatus from  projects_package where packagesourcefileurl IS NULL;
      as_single_query: yes 
    register: sourceurlmissingpackages
    delegate_to: localhost

  - name: Set them to building
    community.postgresql.postgresql_query:
      db: sclbuilder
      login_user: "sclbuilder"
      login_host: sclbuilder
      login_password: "django2know"
      query: >-
        update projects_package set packagestatus = 'Building', 
        packagesourcefilestatus = 'Building' , 
        packagesourcefileurl = '{{ repourl }}{{ repopath }}{{ item.packagename }}-{{ item.packageversion}}.tar.gz'  
        where id = {{ item.id }} ; 
      as_single_query: yes
    register: adoptedpackages
    with_items:
    - "{{ sourceurlmissingpackages.query_all_results.0 }}"
    delegate_to: localhost


  - name: Select the new ones 
    community.postgresql.postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select * from  projects_package where packagesourcefilestatus 	IS NULL;;
      as_single_query: yes
    register: newpackages
    delegate_to: localhost 
  
  - name: Set them to building
    community.postgresql.postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: "update projects_package set packagesourcefilestatus = 'Building'  where id = {{ item.id }} ; " 
      as_single_query: yes 
      #query: "update projects_package set packagesourcefilestatus = 'Building', packagesourcefileurl = '{{ repourl }}{{ repopath }}{{ item.packagename }}-{{ item.packageversion}}.tar.gz'  where id = {{ item.id }} ; " 
    register: adoptedpackages
    with_items:
    - "{{ newpackages.query_all_results.0 }}"
    delegate_to: localhost

  - name: Select the building candidates
    community.postgresql.postgresql_query:
      login_host: sclbuilder
      db: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select packagename, packageversion from  projects_package where packagesourcefilestatus = 'Building';
      as_single_query: yes
    register: buildingsource
    delegate_to: localhost
  
  - name: Copy the downloader script
    ansible.builtin.template:
      src: sclbuilder_download.sh.j2
      dest: /usr/local/bin/sclbuilder_download.sh
      owner: root
      group: root 
      mode: '0755'

  - name: Copy the downloader python script
    ansible.builtin.template:
      src: pip-downloader.py.j2
      dest: /usr/local/bin/pip-downloader.py
      owner: root
      group: root 
      mode: '0755'

  - name: Copy the downloar create original spec name
    ansible.builtin.template:
      src:  sclbuilder_create_original_specfile.sh.j2
      dest: /usr/local/bin/sclbuilder_create_original_specfile.sh
      owner: root
      group: root 
      mode: '0755'

  - name: Copy the downloader env script
    ansible.builtin.template:
      src:  setbuildenv.sh.j2
      dest: /usr/local/bin/setbuildenv.sh
      owner: root
      group: root 
      mode: '0755'

  - name: Run download on our targets
    command: "/usr/local/bin/sclbuilder_download.sh {{ item.packagename }}=={{ item.packageversion }}"
    register: download
    with_items:
    - "{{ buildingsource.query_all_results.0 }}"

  - name: Check that downloads are available at {{ repourl }}
    uri:
      url: "{{ repourl }}{{ repopath }}/SOURCES/{{ item.packagename }}-{{ item.packageversion }}.tar.gz"
    register: urlcheck
    with_items:
    - "{{ buildingsource.query_all_results.0 }}"


  - name: Create Spec files
    command: "/usr/local/bin/sclbuilder_create_original_specfile.sh  {{ item.packagename }}=={{ item.packageversion }}"
    register: orgspecfile
    with_items:
    - "{{ buildingsource.query_all_results.0 }}"

#  - name: Run download on our targets
#    uri:
#      url: "{{ repourl }}{{ repopath }}{{ item.packagename }}-{{ item.packageversion }}.tar.gz"
#    register: urlcheck
#    with_items:
#    - "{{ buildingsource.query_all_results.0 }}"

#  - debug: 
#      var: urlcheck


  - name: update database if based on curl
    community.postgresql.postgresql_query:
      login_host: sclbuilder
      db: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: "update projects_package set packagesourcefilestatus = 'Completed' where  packagesourcefileurl = '{{ item.url }}' ; " 
    register: completed
    become: yes
    become_user: sclbuilder
    with_items:
      - "{{ urlcheck.results }}"
    when:  item.status == 200
    delegate_to: localhost

  - debug: 
      var: completed
