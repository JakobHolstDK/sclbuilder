---
- name: Initial database seed
  hosts: prod_sclbuilder_worker
  vars_files:
    - vars.yml
  vars:
    - version:  "1.0.0"
    - organisation: "miracle"
    - project: "awxrpm"
  tasks:

  - name: Simple select query to acme db
    community.postgresql.postgresql_query:
      login_host: sclbuilder
      db: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: SELECT version()
      as_single_query: yes
    delegate_to: localhost

#  - name: Select the all packages where packagesclfilestatus is NULL
#    community.postgresql.postgresql_query:
#      db: sclbuilder
#      login_host: sclbuilder
#      login_user: "sclbuilder"
#      login_password: "django2know"
#      query: select id, packagesclfilestatus  from  projects_package where packagesclfilestatus IS NULL;
#      as_single_query: yes
#    register: sclfilesstatusnull
#    delegate_to: localhost

#  - name: Set them to building
#    community.postgresql.postgresql_query:
#      db: sclbuilder
#      login_host: sclbuilder
#      login_user: "sclbuilder"
#      login_password: "django2know"
#      query: >-
#        update projects_package set packagesclfilestatus = 'Building'
#        where id = {{ item.id }}; 
#      as_single_query: yes
#    with_items:
#    - "{{ sclfilesstatusnull.query_all_results.0 }}"
#    delegate_to: localhost

  - name: Select the new ones 
    community.postgresql.postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select id from  projects_package where packagespecfilestatus 	IS NULL;;
      as_single_query: yes
    register: newpackages
    delegate_to: localhost 
 
  - name: Set them to building
    community.postgresql.postgresql_query:
      login_host: sclbuilder
      db: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: "update projects_package set packagespecfilestatus = 'Building'  where id = {{ item.id }} ; " 
      as_single_query: yes
    register: adoptedpackages
    with_items:
    - "{{ newpackages.query_all_results.0 }}"
    delegate_to: localhost 

  - name: Select the building candidates
    community.postgresql.postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: >-
        select packagename, packageversion, packagespecfileurl 
        from  projects_package 
        where packagesclfilestatus = 'Building'
        limit 1;
      as_single_query: yes 
    register: buildingresult
    delegate_to: localhost

  - name: Run sclbuilder_buildscl.sh  on our targets
    command: "/usr/local/bin/sclbuilder_buildscl.sh {{ item.packagename }}=={{ item.packageversion }}"
    register: specfiles
    with_items:
    - "{{ buildingresult.query_all_results.0 }}"
    ignore_errors: yes

  - name: Run download on our targets
    uri:
      url: "{{ repourl }}{{ repopath }}/META/{{ item.packagename }}-{{ item.packageversion }}.sclfiles"
    register: urlcheck
    with_items:
    - "{{ buildingresult.query_all_results.0 }}"
    ignore_errors: yes

#  - debug: 
#      var: urlcheck


  - name: update database if based on curl
    community.postgresql.postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: >- 
        update projects_package 
        set 
        packagesclfilestatus = 'Completed', 
        packagesclrpmfilestatus = 'Completed' 
        where  packagesclrpmfilesurl = '{{ item.url }}' ; 
      as_single_query: yes 
    register: result
    with_items:
      - "{{ urlcheck.results }}"
    when:  item.status == 200
    delegate_to: localhost
