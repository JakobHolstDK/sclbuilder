---
# tasks file for sclbuilder.100-requirements2db
- name: Retrieve Upstream
  ansible.builtin.git:
    repo: "{{ upstream }}"
    dest: /tmp/{{ project }}
    version: "{{ version }}"

- name: Copy requirements.txt
  copy:
    src: /tmp/{{ project }}{{ requirementstxt }}
    dest: /tmp/requirements.txt
    remote_src: yes

- name: Replace "==" with ":"
  replace:
    path: /tmp/requirements.txt
    regexp: '=='
    replace: ": " 

- name: Read Requirements to variable
  include_vars:
    file: /tmp/requirements.txt
    name: requirement_list

- name: Simple select query to sclbuilder db
  postgresql_query:
    db: sclbuilder
    login_host: "sclbuilder"
    login_user: "sclbuilder"
    login_password: "django2know"
    query: SELECT version()

#- debug:
#    msg: "INSERT INTO projects_package
#      (
#        slug,
#        packagename,
#        packageversion,
#        packagestatus,
#        packagecreated
#      )
#      VALUES
#      (
#        '{{ item.key | regex_replace('\\[.*$', '') | regex_replace('\\.','_') }}___{{ item.value | regex_replace('\\.','_') }}',
#        '{{ item.key | regex_replace('\\[.*$', '') }}',
#        '{{ item.value }}',
#        'Initial',
#        '{{ ansible_date_time.date }}'
#      )
#      ON CONFLICT (slug) DO NOTHING;"
 
#  loop: "{{ lookup('dict', requirement_list) }}" 



- name: Insert package
  postgresql_query:
    db: sclbuilder
    login_host: "sclbuilder"
    login_user: "sclbuilder"
    login_password: "django2know"
    query: "
      INSERT INTO projects_package
      (
        slug,
        packagename,
        packageversion,
        packagestatus,
        packagecreated
      )
      VALUES
      (
        '{{ item.key | regex_replace('\\[.*$', '') | regex_replace('\\.','_') }}___{{ item.value | regex_replace('\\.','_') }}',
        '{{ item.key | regex_replace('\\[.*$', '') }}',
        '{{ item.value }}',
        'Initial',
        '{{ ansible_date_time.date }}'
      )
      ON CONFLICT (slug) DO NOTHING;"
  loop: "{{ lookup('dict', requirement_list) }}" 
